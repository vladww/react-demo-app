{"version":3,"sources":["hoc/withAuthRedirect.jsx","assets/images/usersDefaultImg0.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfilePage.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","memo","className","s","item","postImg","src","alt","message","postTop","name","age","postFooter","likesCount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","posts","useSelector","profilePage","dispatch","useDispatch","postsElements","reverse","map","p","id","postsBlock","formData","addPost","newPostBody","ProfileStatusWithHooks","status","useState","editMode","setEditMode","statusLocal","setStatus","useEffect","deactivateEditMode","updateUserStatus","onKeyDown","e","key","onBlur","onChange","currentTarget","autoFocus","onClick","ProfileInfo","profile","photoPlaceholder","Preloader","descriptionBlock","mainPhoto","photos","large","defaultUserPhoto","isOwner","type","target","files","savePhoto","ProfileStatus","compose","withRouter","authorizedId","userId","getUserProfile","getUserStatus","match","params"],"mappings":"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","file":"static/js/4.d5125699.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","export default __webpack_public_path__ + \"static/media/usersDefaultImg0.e00d63e8.jpg\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3pboU\",\"posts\":\"MyPosts_posts__2JuLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19WbU\",\"postImg\":\"Post_postImg__3324d\",\"message\":\"Post_message__3qLN9\",\"postTop\":\"Post_postTop__IkJXx\",\"postFooter\":\"Post_postFooter__3FQoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileHeaderImage\":\"ProfileInfo_profileHeaderImage__1fkD9\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__17LY6\",\"infoContainer\":\"ProfileInfo_infoContainer__335_F\",\"infoBox\":\"ProfileInfo_infoBox__59yNB\",\"fullName\":\"ProfileInfo_fullName__1pECM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__qnR9G\",\"photoPlaceholder\":\"ProfileInfo_photoPlaceholder__cf83D\"};","import { memo } from 'react'\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = memo((props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.postImg}>\r\n        <img \r\n          src='https://wallbox.ru/resize/800x480/wallpapers/main/201313/be283e0c3b9a67b.jpg'\r\n          alt='wallbox'\r\n        />\r\n      </div>\r\n      <div className={s.message}>\r\n        <div className={s.postTop}>{props.name}, {props.age}</div>\r\n        <div>{props.message}</div>\r\n      </div>\r\n      <div className={s.postFooter}>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Post","import { memo } from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormControls/FormControls'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addPost } from '../../../redux/profile-reducer'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'newPostBody'}\r\n          placeholder={'Введите сообщение'}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst MyPostsReduxForm = reduxForm({form: 'myPosts'})(MyPostsForm)\r\n\r\n// window.props = []\r\nconst MyPosts = memo( (props) => {\r\n  \r\n  const posts = useSelector(state => state.profilePage.posts)\r\n  const dispatch = useDispatch()\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() => {\r\n  //     setState({a: 12})\r\n  //   }, 3000)\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != props || nextState != state\r\n  // }\r\n\r\n  // console.log(props)\r\n  // window.props.push(props)\r\n  let postsElements = [...posts].reverse().map( p =>\r\n    <Post\r\n      key={p.id}\r\n      name={p.name}\r\n      age={p.age}\r\n      message={p.message}\r\n      likesCount={p.likesCount}\r\n    />\r\n  )\r\n  \r\n  let addNewPost = (formData) => {\r\n    dispatch(addPost(formData.newPostBody))\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n      <div className={s.posts}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts","import { memo, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUserStatus } from '../../../redux/profile-reducer'\r\n\r\n\r\nconst ProfileStatusWithHooks = memo((props) => {\r\n\r\n  const status = useSelector(state => state.profilePage.status)\r\n  const dispatch = useDispatch()\r\n  \r\n  let [editMode, setEditMode] = useState(false)\r\n  let [statusLocal, setStatus] = useState(status)\r\n\r\n  useEffect(() => {\r\n    setStatus(status)\r\n  }, [status] ) // - Без массива в конце: вызывает этот метод после каждой новой отрисовки компоненты\r\n                      // - С пустым массивом: вызывает этот метод только после первой отрисовки компоненты,\r\n                      //   а при изменении не надо его выполянть (не рекомендуется так делать, так как могут\r\n                      //   меняться неожиданные свойства, о которых ты и не подозревал - и метод будет выполняться)\r\n                      // - С пропсами в массиве: вызываeт этот метод при первой отрисовке,\r\n                      //   а также тогда, когда пропсы изменятся\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    dispatch(updateUserStatus(statusLocal))\r\n    // props.updateUserStatus(status)\r\n  }\r\n\r\n  const onStatusChange =(e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  const handlePress = (e) => {\r\n    switch(e.key) {\r\n      case 'Enter':\r\n        deactivateEditMode()\r\n        break\r\n  \r\n      case 'Escape':\r\n        setStatus(status)\r\n        setEditMode(false)\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode\r\n      ? <div>\r\n          <span onClick={activateEditMode}>{ status || '------------'}</span>\r\n        </div>\r\n      : <div>\r\n          <input onKeyDown={handlePress} onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true} value={statusLocal} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default ProfileStatusWithHooks","import { memo } from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport defaultUserPhoto from '../../../assets/images/usersDefaultImg0.jpg'\r\nimport { savePhoto } from '../../../redux/profile-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ProfileInfo = memo((props) => {\r\n\r\n  const profile = useSelector(state => state.profilePage.profile)\r\n  const dispatch = useDispatch()\r\n\r\n  if(!profile) {\r\n    return <div className={s.photoPlaceholder}><Preloader /></div>\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      dispatch(savePhoto(e.target.files[0]))\r\n      // props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <div>\r\n          <img className={s.mainPhoto} src={ profile.photos.large || defaultUserPhoto } alt=\"profile\" />\r\n        </div>\r\n        { props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n        <ProfileStatus />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default ProfileInfo","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getUserProfile, getUserStatus } from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport s from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  const authorizedId = useSelector(state => state.auth.userId)\r\n  // const isAuth = useSelector(state => state.auth.isAuth)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    // можно и вот так, но без последнего пункта тоже всё работает\r\n    // (withAuthRedirect и так отрабатывает редирект)\r\n    // let userId = props.match.params.userId || props.authorizedId\r\n    // let userId = props.match.params.userId || authorizedId || props.history.push('/login')\r\n\r\n    dispatch(getUserProfile(authorizedId))\r\n    dispatch(getUserStatus(authorizedId))\r\n    // props.getUserStatus(props.match.params.userId)\r\n  }, [authorizedId])\r\n\r\n  return (\r\n      <div>\r\n        <ProfileInfo\r\n          isOwner={!props.match.params.userId}\r\n          // profile={profile}\r\n          // status={status}\r\n          // updateUserStatus={ status => dispatch(updateUserStatus(status)) }\r\n          // savePhoto={ photo => dispatch(savePhoto(photo)) }\r\n          // {...props}  //не много ли информации получает следующая компонента?\r\n        />\r\n        <MyPosts />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default compose(withRouter, withAuthRedirect)(Profile)\r\n\r\n\r\n// class ProfileContainer extends Component {\r\n  \r\n//   componentDidMount() {\r\n//     let userId = this.props.match.params.userId\r\n//     if(!userId) {\r\n//       userId = this.props.authorizedId     //у меня и без этой штуки всё работает\r\n//       if(!userId) {                        //говорил, что это ему не нравится, но хочет показать, что так можно\r\n//         this.props.history.push('/login')  //у меня и без этого всё работает\r\n//       }\r\n//     }\r\n\r\n//     this.props.getUserProfile(userId)\r\n//     this.props.getUserStatus(this.props.match.params.userId)\r\n//   }\r\n\r\n//   //говорит, скопируйте то же самое сюда, чтобы норм работало\r\n//   //но у меня без этого норм раотает, а с этим хуже\r\n//   // componentDidUpdate(prevProps, prevState, snapshot) {\r\n//   //   if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n//   //     let userId = this.props.match.params.userId\r\n//   //     if(!userId) {\r\n//   //       userId = this.props.authorizedId     //у меня и без этой штуки всё работает\r\n//   //       if(!userId) {                        //говорил, что это ему не нравится, но хочет показать, что так можно\r\n//   //         this.props.history.push('/login')  //у меня и без этого всё работает\r\n//   //       }\r\n//   //     }\r\n//   //     this.props.getUserProfile(userId)\r\n//   //     this.props.getUserStatus(this.props.match.params.userId)\r\n//   //   }\r\n//   // }\r\n\r\n//   render() {\r\n//     return (\r\n//       <Profile\r\n//         {...this.props}  //не много ли информации получает следующая компонента?\r\n//         isOwner={!this.props.match.params.userId}\r\n//         profile={this.props.profile}\r\n//         status={this.props.status}\r\n//         updateUserStatus={this.props.updateUserStatus}\r\n//         savePhoto={this.props.savePhoto}\r\n//       />\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//   profile: state.profilePage.profile,\r\n//   status: state.profilePage.status,\r\n//   authorizedId: state.auth.userId,\r\n//   isAuth: state.auth.isAuth\r\n// }}\r\n\r\n// export default compose(\r\n//   connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto }),\r\n//   withRouter,\r\n//   withAuthRedirect\r\n// )(ProfileContainer)"],"sourceRoot":""}
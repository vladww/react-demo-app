{"version":3,"sources":["hoc/withAuthRedirect.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","className","s","item","postImg","src","alt","message","postTop","name","age","postFooter","likesCount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","window","MyPosts","memo","console","log","postsElements","profilePage","posts","reverse","map","p","id","postsBlock","formData","addPost","newPostBody","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateUserStatus","onChange","e","currentTarget","autoFocus","onClick","ProfileInfo","profile","descriptionBlock","mainPhoto","photos","large","photoPlaceholder","Preloader","Profile","MyPostsContainer","ProfileContainer","userId","match","params","authorizedId","history","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.ea16a436.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3pboU\",\"posts\":\"MyPosts_posts__2JuLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19WbU\",\"postImg\":\"Post_postImg__3324d\",\"message\":\"Post_message__3qLN9\",\"postTop\":\"Post_postTop__IkJXx\",\"postFooter\":\"Post_postFooter__3FQoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileHeaderImage\":\"ProfileInfo_profileHeaderImage__1fkD9\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__17LY6\",\"infoContainer\":\"ProfileInfo_infoContainer__335_F\",\"infoBox\":\"ProfileInfo_infoBox__59yNB\",\"fullName\":\"ProfileInfo_fullName__1pECM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__qnR9G\",\"photoPlaceholder\":\"ProfileInfo_photoPlaceholder__cf83D\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n  // console.log(props)\r\n  // debugger\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.postImg}>\r\n        <img \r\n          src='https://wallbox.ru/resize/800x480/wallpapers/main/201313/be283e0c3b9a67b.jpg'\r\n          alt='wallbox'\r\n        />\r\n      </div>\r\n      <div className={s.message}>\r\n        <div className={s.postTop}>{props.name}, {props.age}</div>\r\n        <div>{props.message}</div>\r\n      </div>\r\n      <div className={s.postFooter}>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormControls/FormControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'newPostBody'}\r\n          placeholder={'Введите сообщение'}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst MyPostsReduxForm = reduxForm({form: 'myPosts'})(MyPostsForm)\r\n\r\nwindow.props = []\r\nconst MyPosts = React.memo( (props) => {\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() => {\r\n  //     setState({a: 12})\r\n  //   }, 3000)\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != props || nextState != state\r\n  // }\r\n\r\n  console.log(props)\r\n  window.props.push(props)\r\n  let postsElements = [...props.profilePage.posts].reverse().map( p => <Post key={p.id} name={p.name} age={p.age} message={p.message} likesCount={p.likesCount} />)\r\n  \r\n  let addNewPost = (formData) => {\r\n    props.addPost(formData.newPostBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n      <div className={s.posts}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts)","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    // console.log('useEffect')\r\n    setStatus(props.status)\r\n  }, [props.status] ) // - Без массива в конце: вызывай этот метод после каждой новой отрисовки компоненты\r\n                      // - С пустым массивом: вызывай этот метод только после первой отрисовки компоненты,\r\n                      //   а при изменении не надо его выполянть (не рекомендуется так делать, так как могут\r\n                      //   меняться неожиданные свойства, о которых ты и не подозревал - и метод будет выполняться)\r\n                      // - С пропсами в массиве: вызывай этот метод при первой отрисовке,\r\n                      //   а также тогда, когда пропсы изменятся\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n\r\n  const onStatusChange =(e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode\r\n      ? <div>\r\n          <span onClick={activateEditMode}>{ props.status || '------------'}</span>\r\n        </div>\r\n      : <div>\r\n          <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  if(!props.profile) {\r\n    return <div className={s.photoPlaceholder}><Preloader /></div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <div className={s.mainPhoto}>\r\n          {props.profile.photos.large ?\r\n            <img src={props.profile.photos.large} alt=\"profile\" />\r\n            :\r\n            <img src=\"https://pbs.twimg.com/media/CH-aSOnUwAEC0N8.jpg\" alt=\"basic pic\" />\r\n          }\r\n        </div>\r\n        <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n        {/* <div className={s.infoContainer}>\r\n\r\n          <div className={s.fullName}>{props.profile.fullName}</div>\r\n\r\n          <div className={s.mainPhoto}>\r\n            { props.profile.photos.large ?\r\n              <img src={props.profile.photos.large} alt=\"profile photo\" />\r\n              :\r\n              <img src=\"https://pbs.twimg.com/media/CH-aSOnUwAEC0N8.jpg\" alt=\"no photo\" />\r\n            }\r\n          </div>\r\n\r\n          { props.profile.aboutMe &&\r\n          <div className={s.infoBox}>\r\n            <div className={s.infoLabel}>О себе:</div>\r\n            <div className={s.infoText}>{props.profile.aboutMe}</div>\r\n          </div> }\r\n\r\n          \r\n          <div className={s.infoBox}>\r\n            { props.profile.lookingForAJob ?\r\n              <div className={s.infoLabel}>Ищет работу</div>\r\n              :\r\n              <div className={s.infoLabel}>Не ищет работу</div>\r\n            }\r\n          </div>\r\n\r\n          { props.profile.lookingForAJobDescription && props.profile.lookingForAJob &&\r\n          <div className={s.infoBox}>\r\n            <div className={s.infoLabel}>Описание работы:</div>\r\n            <div className={s.infoText}>{props.profile.lookingForAJobDescription}</div>\r\n          </div> }\r\n          \r\n          { props.profile.contacts.mainLink &&       \r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.mainLink.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.mainLink : 'https://' + props.profile.contacts.mainLink\r\n            } target=\"_blank\">Основная ссылка</a>\r\n            </div>\r\n          }{props.profile.contacts.website &&\r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.website.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.website : 'https://' + props.profile.contacts.website}\r\n                target=\"_blank\">Вебсайт</a>\r\n            </div>\r\n          }{props.profile.contacts.facebook &&       \r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.facebook.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.facebook : 'https://' + props.profile.contacts.facebook}\r\n                target=\"_blank\">Facebook</a>\r\n            </div>\r\n          }{props.profile.contacts.github &&       \r\n              <div className={s.infoBox}>\r\n                <a href={props.profile.contacts.github.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.github : 'https://' + props.profile.contacts.github}\r\n                target=\"_blank\">GitHub</a>\r\n              </div>\r\n          }{props.profile.contacts.instagram &&       \r\n              <div className={s.infoBox}>\r\n                <a href={props.profile.contacts.instagram.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.instagram : 'https://' + props.profile.contacts.instagram }\r\n                target=\"_blank\">Instagram</a>\r\n              </div>\r\n          }{props.profile.contacts.twitter &&\r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.twitter.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.twitter : 'https://' + props.profile.contacts.twitter }\r\n                target=\"_blank\">Twitter</a>\r\n            </div>\r\n          }{props.profile.contacts.vk &&\r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.vk.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.vk : 'https://' + props.profile.contacts.vk }\r\n                target=\"_blank\">VK</a>\r\n            </div>\r\n          }{\r\n            props.profile.contacts.youtube &&\r\n            <div className={s.infoBox}>\r\n              <a href={props.profile.contacts.youtube.substring(0, 8) === 'https://' ?\r\n                props.profile.contacts.youtube : 'https://' + props.profile.contacts.youtube }\r\n                target=\"_blank\">YouTube</a>\r\n            </div>\r\n          }\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n      <div>\r\n        <ProfileInfo\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if(!userId) {\r\n      userId = this.props.authorizedId     //у меня и без этой штуки всё работает\r\n      if(!userId) {                        //говорил, что это ему не нравится, но хочет показать, что так можно\r\n        this.props.history.push('/login')  //у меня и без этого всё работает\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    // setTimeout(() => {\r\n    this.props.getUserStatus(this.props.match.params.userId)  \r\n    // }, 1000)\r\n  }\r\n\r\n  render() {\r\n    // console.log('render')\r\n    return (\r\n      <Profile\r\n        {...this.props}  //не много ли информации получает следующая компонента?\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log('mapStateToProps')\r\n  return {\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n}}\r\n\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(withRouter(withAuthRedirect(ProfileContainer)))\r\n// export default withAuthRedirect(withRouter(connect(mapStateToProps, { getUserProfile })(ProfileContainer)))\r\n// export default withRouter(withAuthRedirect(connect(mapStateToProps, { getUserProfile })(ProfileContainer)))\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}
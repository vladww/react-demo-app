{"version":3,"sources":["assets/images/usersDefaultImg0.jpg","components/common/Paginator/Paginator.module.css","components/Users/User.module.css","redux/selectors/users-selectors.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/UsersSearchForm.jsx","components/Users/UsersPage.jsx"],"names":["module","exports","getUsers","createSelector","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","usersTotalCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","filter","Paginator","props","pagesCount","Math","ceil","itemsTotalCount","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","paginationBar","onClick","p","map","cn","selectedPage","pageNumber","onPageChange","User","user","useSelector","dispatch","useDispatch","to","id","userPhoto","src","photos","small","defaultUserPhoto","alt","followed","disabled","some","unfollow","follow","name","status","usersSearchFormValidate","values","UsersSearchForm","memo","onFilterChanged","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","type","as","value","UsersPage","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","page","requestUsers","setCurrentPage","query","pathnsme","Preloader","length"],"mappings":"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","file":"static/js/6.6300b6e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/usersDefaultImg0.e00d63e8.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBar\":\"Paginator_paginationBar__3iXOc\",\"selectedPage\":\"Paginator_selectedPage__2Y-AE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__3lsfu\"};","import { createSelector } from 'reselect'\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n}\r\n\r\n//в данном случае, делает то же, что и getUsers, но при изменении данных state, не относящихся\r\n//к компоненте с этими данными, не вызывает её перерисовку\r\n//также, она зависит от getUsers\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.usersTotalCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state) => {\r\n  return state.usersPage.filter\r\n}","import { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Paginator = (props) => {\r\n  let pagesCount = Math.ceil(props.itemsTotalCount / props.pageSize)\r\n  let pages = []\r\n  for(let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n  let rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n  return <div className={s.paginationBar}>\r\n    { portionNumber > 1 &&\r\n      <span>\r\n      <button onClick={() => { setPortionNumber(1) }}>START</button>\r\n      <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n      </span>\r\n    }\r\n\r\n    {pages\r\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n      .map(p => {\r\n        return (\r\n          <span\r\n            key={p}\r\n            // className={props.currentPage === p && s.selectedPage}\r\n            className={cn({[s.selectedPage] : props.currentPage === p}, s.pageNumber)}\r\n            // cn говорит - добавь все стили, указанные через запятую. А \" [стиль]: ture или false \" - это условие, добавлять стиль или нет (вроде как, обычный JS синтаксис)\r\n            onClick={() => props.onPageChange(p)}\r\n          >{p} </span>\r\n        )\r\n      })\r\n    }\r\n\r\n    { portionCount > portionNumber &&\r\n      <span>\r\n      <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n      <button onClick={() => { setPortionNumber(portionCount) }}>END</button>\r\n      </span>\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Paginator","// import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './User.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport defaultUserPhoto from '../../assets/images/usersDefaultImg0.jpg'\r\nimport { follow, unfollow } from '../../redux/users-reducer'\r\nimport { getFollowingInProgress } from '../../redux/selectors/users-selectors'\r\n\r\n\r\nconst User = ({user}) => {\r\n  const followingInProgress = useSelector(getFollowingInProgress)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  // const onFollow = userId => dispatch(follow(userId))\r\n  // const onUnfollow = userId => dispatch(unfollow(userId))\r\n\r\n  return <>\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img className={s.userPhoto} src={ user.photos.small || defaultUserPhoto } alt=\"userPic\" />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed\r\n            ? <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => dispatch(unfollow(user.id))}\r\n                // onClick={() => onUnfollow(user.id)}\r\n              >Unfollow</button>\r\n            : <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => dispatch(follow(user.id))}\r\n                // onClick={() => onFollow(user.id)}\r\n              >Follow</button>\r\n          }\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'u.location.city'}, {'u.location.country'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default User","import { memo } from \"react\"\r\nimport { Formik, Form, Field } from \"formik\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getUsersFilter } from \"../../redux/selectors/users-selectors\"\r\n\r\n\r\nconst usersSearchFormValidate = values => {\r\n  // const errors = {}\r\n  // if (!values.email) {\r\n  //   errors.email = 'Required'\r\n  // } else if (\r\n  //   !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n  // ) {\r\n  //   errors.email = 'Invalid email address'\r\n  // }\r\n  // return errors\r\n}\r\n\r\n\r\nconst UsersSearchForm = memo(({ onFilterChanged }) => {\r\n\r\n  const filter = useSelector(getUsersFilter)\r\n\r\n  const submit = (values, { setSubmitting }) => {\r\n    const filter = {\r\n      term: values.term,\r\n      friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n    }\r\n    // alert(JSON.stringify(values, null, 2))\r\n    onFilterChanged(filter)\r\n    setSubmitting(false)\r\n  }\r\n\r\n  return <div>\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={{ term: filter.term, friend: String(filter.friend) }}\r\n      validate={usersSearchFormValidate}\r\n      onSubmit={submit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"text\" name=\"term\" />\r\n          <Field name=\"friend\" as=\"select\">\r\n            <option value=\"null\">All</option>\r\n            <option value=\"true\">Only followed</option>\r\n            <option value=\"false\">Only unfollowed</option>\r\n          </Field>\r\n          <button type=\"submit\" disabled={isSubmitting}>Find</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n})\r\n\r\nexport default UsersSearchForm","import { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { setCurrentPage, requestUsers } from '../../redux/users-reducer'\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage,\r\n         getIsFetching, getUsersFilter } from '../../redux/selectors/users-selectors'\r\n\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nimport User from './User'\r\nimport UsersSearchForm from './UsersSearchForm'\r\nimport * as queryString from 'querystring'\r\n\r\n\r\n\r\nconst UsersPage = (props) => {\r\n\r\n  const usersTotalCount = useSelector(getTotalUsersCount)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const isFetching = useSelector(getIsFetching)\r\n  const users = useSelector(getUsers)\r\n  const pageSize = useSelector(getPageSize)\r\n  const filter = useSelector(getUsersFilter)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const parsed = queryString.parse(history.location.search.substr(1))\r\n\r\n    let actualPage = currentPage\r\n    let actualFilter = filter\r\n    if(parsed.page) actualPage = +parsed.page //+parsed.page то же, что и Number(parsed.page)\r\n    if(parsed.term) actualFilter = {...actualFilter, term: parsed.term}\r\n    if(parsed.friend) actualFilter = {...actualFilter, friend: parsed.friend === null ? null : parsed.friend === 'true' ? true : false}\r\n\r\n    dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    return () => {\r\n      dispatch(setCurrentPage(1))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const query = {}\r\n\r\n    if(filter.term) query.term = filter.term\r\n    if(filter.friend !== null) query.friend = String(filter.friend)\r\n    if(currentPage !== 1) query.page = String(currentPage)\r\n\r\n    history.push({\r\n      pathnsme: '/users',\r\n      search: queryString.stringify(query)\r\n      // search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n    })\r\n  }, [filter, currentPage])\r\n\r\n  const onFilterChanged = (filter) => {\r\n    dispatch(requestUsers(1, pageSize, filter))\r\n  }\r\n  \r\n  const onPageChange = (pageNumber) => {\r\n    dispatch(requestUsers(pageNumber, pageSize, filter))\r\n  }\r\n\r\n  return <>\r\n    { isFetching && <Preloader />}\r\n\r\n    <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n\r\n    <Paginator\r\n      itemsTotalCount={usersTotalCount}\r\n      pageSize={pageSize}\r\n      currentPage={currentPage}\r\n      portionSize={10}\r\n      \r\n      onPageChange={onPageChange}\r\n    />\r\n    { users.length !== 0\r\n      ? users.map(user => <User key={user.id} user={user} />)\r\n      : <div>No users found</div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default UsersPage"],"sourceRoot":""}